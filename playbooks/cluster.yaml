---
- hosts: utility
  vars:
    var_ambari_user: admin
    var_ambari_password: admin
  tasks:
  # list registered cluster hosts
  - uri:
      url: "http://{{ lookup('file', 'ambariserver.txt') }}:8080/api/v1/hosts"
      method: GET
      HEADER_Content-Type: application/json
      return_content: yes
      user: "{{ var_ambari_user }}"
      password: "{{ var_ambari_password }}"
      force_basic_auth: yes
    register: resp_hosts
  - name: remove hosts.out if it exists
    file: path=/tmp/hosts.out state=absent
  - name: generate cluster host count and sequence for array processing
    shell: echo {{ (resp_hosts.content|from_json)['items']|length }}
    register: var_clus_host_count
  - name: write the registered cluster hosts to file
    template: src=~/hostmap.tpl dest=~/hostmap.json
# this is the properly constructed uri action, doesn't work due to a bug/feature
#  - uri:
#      url: "http://{{ lookup('file', 'ambariserver.txt') }}:8080/api/v1/blueprints/testclus" #need to post the testclus.json file
#      method: POST
#      user: "{{ var_ambari_user }}"
#      password: "{{ var_ambari_password }}"
#      force_basic_auth: yes
#      body_format: json
#      body: "{{ lookup('file', '~/testclus.json') }}"
# using a curl command instead
  - name: post the blueprint
    command: 'curl -H "X-Requested-By: Pythian" -X POST -u "{{ var_ambari_user }}":"{{ var_ambari_password }}" http://"{{ lookup("file", "ambariserver.txt") }}":8080/api/v1/blueprints/testclus -d @testclus.json'
  - name: post the hostmap
    command: 'curl -H "X-Requested-By: Pythian" -X POST -u "{{ var_ambari_user }}":"{{ var_ambari_password }}" http://"{{ lookup("file", "ambariserver.txt") }}":8080/api/v1/clusters/testclus -d @hostmap.json'
